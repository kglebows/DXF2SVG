#!/usr/bin/env python3
"""
Demo i test dla interaktywnego GUI
"""

import os
import sys

def demo_gui():
    """Demonstracja mo≈ºliwo≈õci GUI"""
    print("=== DXF2SVG Interactive GUI - Demo ===\n")
    
    # Sprawd≈∫ czy pliki istniejƒÖ
    files_check = [
        ("interactive_gui.py", "G≈Ç√≥wny plik GUI"),
        ("run_interactive_gui.py", "Launcher GUI"),
        ("input.dxf", "Przyk≈Çadowy plik DXF"),
        ("output_structured.svg", "Wygenerowany SVG"),
        ("dxf2svg.py", "Silnik konwersji")
    ]
    
    print("Sprawdzanie plik√≥w:")
    for filename, description in files_check:
        exists = "‚úÖ" if os.path.exists(filename) else "‚ùå"
        print(f"{exists} {filename:<25} - {description}")
    
    print("\n=== Funkcje GUI ===")
    features = [
        "üìÅ Wyb√≥r pliku DXF przez dialog",
        "‚öôÔ∏è  Konwersja DXF ‚Üí SVG w tle",
        "üñºÔ∏è  PodglƒÖd SVG z zoomem i panoramowaniem", 
        "üîÑ Auto-od≈õwie≈ºanie po konwersji",
        "üìä Panel statusu i log√≥w",
        "üéõÔ∏è  Kontrola opcji renderowania",
        "üìè Informacje o pliku i zoomie",
        "üñ±Ô∏è  Intuicyjna obs≈Çuga myszƒÖ"
    ]
    
    for feature in features:
        print(f"  {feature}")
    
    print("\n=== Instrukcja uruchomienia ===")
    print("1. python interactive_gui.py")
    print("2. Wybierz plik DXF przyciskiem 'Wybierz'")
    print("3. Kliknij 'Konwertuj DXF ‚Üí SVG'")
    print("4. PodglƒÖd SVG pojawi siƒô automatycznie")
    print("5. U≈ºyj k√≥≈Çka myszy do zoomowania")
    print("6. PrzeciƒÖgnij myszƒÖ aby przesunƒÖƒá widok")
    
    print("\n=== Kontrola podglƒÖdu ===")
    controls = [
        "K√≥≈Çko myszy ‚ÜïÔ∏è  - Zoom in/out",
        "PrzeciƒÖganie üñ±Ô∏è - Panoramowanie", 
        "Przycisk 'Reset' - Przywr√≥cenie domy≈õlnego widoku",
        "Przycisk 'Dopasuj' - Automatyczne skalowanie",
        "Przycisk 'Od≈õwie≈º' - Ponowne za≈Çadowanie SVG"
    ]
    
    for control in controls:
        print(f"  ‚Ä¢ {control}")
    
    print(f"\n=== Status systemu ===")
    print(f"üìÇ Katalog roboczy: {os.getcwd()}")
    print(f"üêç Python: {sys.version.split()[0]}")
    print(f"üíª System: {os.name}")
    
    # Sprawd≈∫ importy
    print(f"\n=== Sprawdzanie zale≈ºno≈õci ===")
    dependencies = [
        ("tkinter", "GUI framework"),
        ("PIL", "Pillow - obs≈Çuga obraz√≥w"), 
        ("xml.etree.ElementTree", "Parsowanie XML/SVG"),
        ("threading", "WielowƒÖtkowo≈õƒá"),
        ("ezdxf", "Parsowanie DXF"),
        ("svgwrite", "Generowanie SVG")
    ]
    
    for module, desc in dependencies:
        try:
            __import__(module)
            print(f"‚úÖ {module:<20} - {desc}")
        except ImportError:
            print(f"‚ùå {module:<20} - {desc} (BRAK!)")
    
    print(f"\n{'='*50}")
    print("GUI gotowe do uruchomienia!")
    print("U≈ºyj: python interactive_gui.py")
    print(f"{'='*50}")

if __name__ == "__main__":
    demo_gui()
